// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusalaGatewayProject.Data;

namespace MusalaGatewayProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MusalaGatewayProject.Models.Gateway", b =>
                {
                    b.Property<string>("GatewayId")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("GatewayId");

                    b.ToTable("Gateways");

                    b.HasData(
                        new
                        {
                            GatewayId = "1571C36C-7EBF-4B03-A4E9-81B24910B9A0",
                            Address = "127.0.0.1",
                            Name = "TestGateway#01"
                        },
                        new
                        {
                            GatewayId = "CAD72B56-2016-4291-B5F4-CFA2A3FED38C",
                            Address = "192.168.172.5",
                            Name = "TestGateway#02"
                        },
                        new
                        {
                            GatewayId = "E9BADFA9-51E2-4BA1-8FD9-583AC030E1B3",
                            Address = "255.255.255.128",
                            Name = "TestGateway#03"
                        },
                        new
                        {
                            GatewayId = "D3EEC6A0-E645-41F2-9ED8-93FF0F277D8E",
                            Address = "129.145.175.145",
                            Name = "TestGateway#04"
                        },
                        new
                        {
                            GatewayId = "695E5928-92AC-44A8-B122-1C5036BCE7C2",
                            Address = "197.245.127.247",
                            Name = "TestGateway#05"
                        });
                });

            modelBuilder.Entity("MusalaGatewayProject.Models.PeripheralDevice", b =>
                {
                    b.Property<int>("UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("GatewayId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("StatusOfDevice")
                        .HasColumnType("int");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UID");

                    b.HasIndex("GatewayId");

                    b.ToTable("Devices");

                    b.HasData(
                        new
                        {
                            UID = 1,
                            DateCreated = new DateTime(2022, 10, 14, 22, 4, 15, 8, DateTimeKind.Local).AddTicks(3417),
                            GatewayId = "1571C36C-7EBF-4B03-A4E9-81B24910B9A0",
                            StatusOfDevice = 0,
                            Vendor = "Asus"
                        },
                        new
                        {
                            UID = 2,
                            DateCreated = new DateTime(2022, 10, 14, 22, 4, 15, 10, DateTimeKind.Local).AddTicks(9287),
                            GatewayId = "E9BADFA9-51E2-4BA1-8FD9-583AC030E1B3",
                            StatusOfDevice = 1,
                            Vendor = "Amazon"
                        },
                        new
                        {
                            UID = 3,
                            DateCreated = new DateTime(2022, 10, 14, 22, 4, 15, 10, DateTimeKind.Local).AddTicks(9334),
                            GatewayId = "695E5928-92AC-44A8-B122-1C5036BCE7C2",
                            StatusOfDevice = 1,
                            Vendor = "Intel"
                        },
                        new
                        {
                            UID = 4,
                            DateCreated = new DateTime(2022, 10, 14, 22, 4, 15, 10, DateTimeKind.Local).AddTicks(9339),
                            GatewayId = "CAD72B56-2016-4291-B5F4-CFA2A3FED38C",
                            StatusOfDevice = 1,
                            Vendor = "Intel"
                        },
                        new
                        {
                            UID = 5,
                            DateCreated = new DateTime(2022, 10, 14, 22, 4, 15, 10, DateTimeKind.Local).AddTicks(9343),
                            GatewayId = "E9BADFA9-51E2-4BA1-8FD9-583AC030E1B3",
                            StatusOfDevice = 0,
                            Vendor = "Cisco"
                        },
                        new
                        {
                            UID = 6,
                            DateCreated = new DateTime(2022, 10, 14, 22, 4, 15, 10, DateTimeKind.Local).AddTicks(9347),
                            GatewayId = "D3EEC6A0-E645-41F2-9ED8-93FF0F277D8E",
                            StatusOfDevice = 0,
                            Vendor = "Amazon"
                        },
                        new
                        {
                            UID = 7,
                            DateCreated = new DateTime(2022, 10, 14, 22, 4, 15, 10, DateTimeKind.Local).AddTicks(9350),
                            GatewayId = "695E5928-92AC-44A8-B122-1C5036BCE7C2",
                            StatusOfDevice = 0,
                            Vendor = "Nvidia"
                        },
                        new
                        {
                            UID = 8,
                            DateCreated = new DateTime(2022, 10, 14, 22, 4, 15, 10, DateTimeKind.Local).AddTicks(9353),
                            GatewayId = "695E5928-92AC-44A8-B122-1C5036BCE7C2",
                            StatusOfDevice = 0,
                            Vendor = "Microsoft"
                        },
                        new
                        {
                            UID = 9,
                            DateCreated = new DateTime(2022, 10, 14, 22, 4, 15, 10, DateTimeKind.Local).AddTicks(9357),
                            GatewayId = "695E5928-92AC-44A8-B122-1C5036BCE7C2",
                            StatusOfDevice = 0,
                            Vendor = "Apple"
                        },
                        new
                        {
                            UID = 10,
                            DateCreated = new DateTime(2022, 10, 14, 22, 4, 15, 10, DateTimeKind.Local).AddTicks(9360),
                            GatewayId = "D3EEC6A0-E645-41F2-9ED8-93FF0F277D8E",
                            StatusOfDevice = 1,
                            Vendor = "Apple"
                        },
                        new
                        {
                            UID = 11,
                            DateCreated = new DateTime(2022, 10, 14, 22, 4, 15, 10, DateTimeKind.Local).AddTicks(9364),
                            GatewayId = "D3EEC6A0-E645-41F2-9ED8-93FF0F277D8E",
                            StatusOfDevice = 0,
                            Vendor = "Panasonic"
                        },
                        new
                        {
                            UID = 12,
                            DateCreated = new DateTime(2022, 10, 14, 22, 4, 15, 10, DateTimeKind.Local).AddTicks(9367),
                            GatewayId = "D3EEC6A0-E645-41F2-9ED8-93FF0F277D8E",
                            StatusOfDevice = 0,
                            Vendor = "Sony"
                        },
                        new
                        {
                            UID = 13,
                            DateCreated = new DateTime(2022, 10, 14, 22, 4, 15, 10, DateTimeKind.Local).AddTicks(9370),
                            GatewayId = "695E5928-92AC-44A8-B122-1C5036BCE7C2",
                            StatusOfDevice = 0,
                            Vendor = "AOC"
                        },
                        new
                        {
                            UID = 14,
                            DateCreated = new DateTime(2022, 10, 14, 22, 4, 15, 10, DateTimeKind.Local).AddTicks(9373),
                            GatewayId = "1571C36C-7EBF-4B03-A4E9-81B24910B9A0",
                            StatusOfDevice = 0,
                            Vendor = "Cooler Master"
                        },
                        new
                        {
                            UID = 15,
                            DateCreated = new DateTime(2022, 10, 14, 22, 4, 15, 10, DateTimeKind.Local).AddTicks(9376),
                            GatewayId = "695E5928-92AC-44A8-B122-1C5036BCE7C2",
                            StatusOfDevice = 1,
                            Vendor = "AMD"
                        },
                        new
                        {
                            UID = 16,
                            DateCreated = new DateTime(2022, 10, 14, 22, 4, 15, 10, DateTimeKind.Local).AddTicks(9379),
                            GatewayId = "1571C36C-7EBF-4B03-A4E9-81B24910B9A0",
                            StatusOfDevice = 1,
                            Vendor = "Intel"
                        },
                        new
                        {
                            UID = 17,
                            DateCreated = new DateTime(2022, 10, 14, 22, 4, 15, 10, DateTimeKind.Local).AddTicks(9383),
                            GatewayId = "CAD72B56-2016-4291-B5F4-CFA2A3FED38C",
                            StatusOfDevice = 0,
                            Vendor = "Google"
                        },
                        new
                        {
                            UID = 18,
                            DateCreated = new DateTime(2022, 10, 14, 22, 4, 15, 10, DateTimeKind.Local).AddTicks(9386),
                            GatewayId = "1571C36C-7EBF-4B03-A4E9-81B24910B9A0",
                            StatusOfDevice = 0,
                            Vendor = "Nvidia"
                        },
                        new
                        {
                            UID = 19,
                            DateCreated = new DateTime(2022, 10, 14, 22, 4, 15, 10, DateTimeKind.Local).AddTicks(9389),
                            GatewayId = "695E5928-92AC-44A8-B122-1C5036BCE7C2",
                            StatusOfDevice = 0,
                            Vendor = "Oracle"
                        },
                        new
                        {
                            UID = 20,
                            DateCreated = new DateTime(2022, 10, 14, 22, 4, 15, 10, DateTimeKind.Local).AddTicks(9392),
                            GatewayId = "CAD72B56-2016-4291-B5F4-CFA2A3FED38C",
                            StatusOfDevice = 0,
                            Vendor = "AMD"
                        },
                        new
                        {
                            UID = 21,
                            DateCreated = new DateTime(2022, 10, 14, 22, 4, 15, 10, DateTimeKind.Local).AddTicks(9395),
                            GatewayId = "695E5928-92AC-44A8-B122-1C5036BCE7C2",
                            StatusOfDevice = 1,
                            Vendor = "Nvidia"
                        });
                });

            modelBuilder.Entity("MusalaGatewayProject.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 27, 216, 92, 75, 242, 3, 74, 191, 60, 239, 195, 18, 219, 243, 220, 18, 241, 214, 101, 73, 203, 62, 236, 3, 123, 225, 98, 226, 191, 215, 102, 78 },
                            PasswordSalt = new byte[] { 116, 135, 249, 15, 9, 49, 3, 246, 246, 103, 143, 77, 56, 27, 54, 165, 148, 110, 182, 49, 94, 232, 103, 59, 126, 102, 195, 26, 247, 164, 170, 171, 195, 4, 125, 3, 81, 66, 50, 139, 54, 175, 140, 7, 56, 195, 125, 66, 187, 38, 91, 142, 145, 144, 117, 57, 192, 48, 104, 192, 1, 60, 143, 66 },
                            UserName = "Admin"
                        });
                });

            modelBuilder.Entity("MusalaGatewayProject.Models.PeripheralDevice", b =>
                {
                    b.HasOne("MusalaGatewayProject.Models.Gateway", "Gateway")
                        .WithMany("Devices")
                        .HasForeignKey("GatewayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gateway");
                });

            modelBuilder.Entity("MusalaGatewayProject.Models.Gateway", b =>
                {
                    b.Navigation("Devices");
                });
#pragma warning restore 612, 618
        }
    }
}
